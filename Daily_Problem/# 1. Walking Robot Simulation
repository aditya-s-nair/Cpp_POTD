class Solution {
public:
    int robotSim(vector<int>& commands, vector<vector<int>>& obstacles) {
        unordered_set<string>s;
        for(vector<int>& c:obstacles){
            string key = to_string(c[0]) + "_" + to_string(c[1]);
            s.insert(key);
        }
        int n = commands.size();
        int x = 0;
        int y = 0;
        int maxx = 0;
        // Pointing to North
        pair<int,int> d = {0,1};

        for(int i=0;i<n;i++){
            if(commands[i] == -1){ // right 90 degrees.
                d = {d.second,-d.first};
            }
            else if(commands[i] == -2){ // left 90 degrees.
                d = {-d.second,d.first};
            }
            else{ // move to next direction step by step.
                for(int j=0;j<commands[i];j++){
                    int newX = x + d.first;
                    int newY = y + d.second;
                    string key2 = to_string(newX) + "_" + to_string(newY);

                    if(s.find(key2) != s.end()){
                        break;
                    }
                    
                    x = newX;
                    y = newY;
                }
            }
            maxx = max(maxx,x*x + y*y);
        }
        return maxx;
    }
};
