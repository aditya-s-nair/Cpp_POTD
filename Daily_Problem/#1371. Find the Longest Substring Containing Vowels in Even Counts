class Solution {
public:
    int findTheLongestSubstring(string s) {
        unordered_map<string,int>m;
        vector<int>state(5,0); // a,e,i,o,u (00000)

        string currState = "00000";
        m[currState] = -1;
        int res = 0;
        for(int i=0;i<s.length();i++){
            if(s[i] == 'a'){
                state[0] = (state[0] ^ 1);
            }
            else if(s[i] == 'e'){
                state[1] = (state[1] ^ 1);
            }
            else if(s[i] == 'i'){
                state[2] = (state[2] ^ 1);
            }
            else if(s[i] == 'o'){
                state[3] = (state[3] ^ 1);
            }
            else if(s[i] == 'u'){
                state[4] = (state[4] ^ 1);
            }

            currState = "";
            for(int j=0;j<5;j++){
                currState += to_string(state[j]); // "00011"
            }
            if(m.find(currState) != m.end()){
                res = max(res,i-m[currState]);
            }
            else{
                m[currState] = i;
            }
        }
        return res;
    }
};
